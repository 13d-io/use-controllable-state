{"version":3,"sources":["../../src/helpers.ts","../../src/index.tsx","ControlledComponent.tsx","App.tsx","index.tsx"],"names":["defaultComparator","a","b","setState","previousValue","newValue","comparator","result","isSetStateFunction","CONTROLLED_STATE_CHANGE","Symbol","INTERNAL_STATE_CHANGE","reducer","type","payload","controlledChanges","state","value","internalChanges","undefined","divStyle","margin","ControlledComponent","id","controlValue","onChange","initialState","useReducer","dispatch","setValue","useCallback","controlledSetValue","useEffect","isDefined","useControllableState","setInternalValue","style","padding","marginBottom","backgroundColor","htmlFor","event","target","width","App","useState","ReactDOM","render","document","getElementById"],"mappings":"qMAYO,IAAMA,EAAqC,SAACC,EAAGC,GAAJ,OAAUD,IAAV,G,SAElCE,EACdC,EACAC,EACAC,GAEA,IAAMC,EAdN,oBAceC,EACXH,EADWG,GAAf,EAGA,OAAIF,EAAWF,EAAf,GACE,EAEF,ECNF,IAAMK,EAA0BC,OAAhC,cACMC,EAAwBD,OAA9B,YAEA,SAASE,EAAT,K,IAEIC,SAAMC,YAER,GAAID,IAAJ,EAAsC,CACpC,IAAME,EAAoBZ,EAASa,EAAD,QAAuBA,EAAzD,YACA,MAAO,CACLV,WAAYU,EADP,WAELC,MAFK,EAGLC,qBAAiBC,GAGrB,GAAIN,IAAJ,EAAoC,CAClC,IAAMK,EAAkBf,EAASa,EAAD,QAAuBA,EAAvD,YACA,MAAO,CACLV,WAAYU,EADP,WAELC,MAFK,EAGLC,mBAGJ,S,WCtCIE,EAA0B,CAC9BC,OAAQ,GA2CKC,EAlCgC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIN,EAAsB,EAAtBA,MAAsB,ED+B5E,SACEO,EACAC,EACAnB,kBAA4BN,GAE5B,IAAM0B,EAAe,CACnBT,MADmB,EAEnBX,c,EAE6CqB,qBAAU,KAGhC,uB,OAHhBV,UAAOC,oBAAmBU,OAK7BC,EAAWC,uBACf,mBACEF,EAAS,CACPf,KADO,EAEPC,QAAST,MAJf,IASM0B,EAAqBD,uBACzB,mBACEF,EAAS,CACPf,KADO,EAEPC,QAAST,MAJf,IAmBA,OAVA2B,qBAAU,WACJP,G,SDtEqBR,GAC3B,gBAAOA,ECqEWgB,CAAhB,IACER,OAED,CAACP,EAJJc,IAMAA,qBAAU,WACRD,OACC,CAACA,EAFJC,IAIO,CAACf,EAAOY,EAAf,GCxE6BK,CAC3BjB,EAFwE,EAAfQ,UAClDU,EADiE,oBAU1E,OACE,sBAAKC,MAAO,CAAEC,QAAS,EAAGC,aAAc,GAAIC,gBAAiB,WAA7D,UACE,qBAAKH,MAAOhB,EAAZ,SACE,uBAAOoB,QAASjB,EAAhB,SAAqBA,MAEvB,qBAAKa,MAAOhB,EAAZ,SACE,yBACEG,GAAIA,EACJN,MAAOA,EACPQ,SAba,SAACgB,GACpBN,EAAiBM,EAAMC,OAAOzB,QAaxBmB,MAAO,CAAEO,MAAO,KAJlB,UAME,2BACA,wBAAQ1B,MAAM,OAAd,mBACA,wBAAQA,MAAM,OAAd,oBACA,wBAAQA,MAAM,OAAd,sBACA,wBAAQA,MAAM,OAAd,qBACA,wBAAQA,MAAM,OAAd,0BC1BK2B,EAXH,WAAO,IAAD,EACUC,qBADV,mBACT5B,EADS,KACFY,EADE,KAEhB,OACE,gCACE,cAAC,EAAD,CAAqBN,GAAG,QAAQN,MAAOA,EAAOQ,SAAUI,IACxD,cAAC,EAAD,CAAqBN,GAAG,SAASN,MAAOA,EAAOQ,SAAUI,IACzD,cAAC,EAAD,CAAqBN,GAAG,QAAQN,MAAOA,EAAOQ,SAAUI,QCL9DiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.040933dc.chunk.js","sourcesContent":["import { Comparator, SetStateFunction } from './types';\n\nfunction isSetStateFunction<T>(\n  value: T | SetStateFunction<T>\n): value is SetStateFunction<T> {\n  return typeof value === 'function';\n}\n\nexport function isDefined<T>(value?: T): value is T {\n  return value !== undefined;\n}\n\nexport const defaultComparator: Comparator<any> = (a, b) => a === b;\n\nexport function setState<T>(\n  previousValue: T,\n  newValue: T | SetStateFunction<T>,\n  comparator: Comparator<T>\n): T {\n  const result = isSetStateFunction(newValue)\n    ? newValue(previousValue)\n    : newValue;\n  if (comparator(previousValue, result)) {\n    return previousValue;\n  }\n  return result;\n}\n","import { useCallback, useReducer, useEffect, Reducer } from 'react';\n\nimport {\n  ReducerState,\n  ReducerAction,\n  ChangeHandler,\n  Comparator,\n  UseControllableStateReturnType,\n  SetStateFunction\n} from './types';\nimport { isDefined, defaultComparator, setState } from './helpers';\n\nexport {\n  ChangeHandler,\n  Comparator,\n  UseControllableStateReturnType,\n  SetStateFunction\n};\n\nconst CONTROLLED_STATE_CHANGE = Symbol('controlled');\nconst INTERNAL_STATE_CHANGE = Symbol('internal');\n\nfunction reducer<T>(\n  state: ReducerState<T>,\n  { type, payload }: ReducerAction<T>\n): ReducerState<T> {\n  if (type === CONTROLLED_STATE_CHANGE) {\n    const controlledChanges = setState(state.value, payload, state.comparator);\n    return {\n      comparator: state.comparator,\n      value: controlledChanges,\n      internalChanges: undefined\n    };\n  }\n  if (type === INTERNAL_STATE_CHANGE) {\n    const internalChanges = setState(state.value, payload, state.comparator);\n    return {\n      comparator: state.comparator,\n      value: internalChanges,\n      internalChanges\n    };\n  }\n  return state;\n}\n\nexport function useControllableState<T>(\n  controlValue: T,\n  onChange?: ChangeHandler<T>,\n  comparator: Comparator<T> = defaultComparator\n): UseControllableStateReturnType<T> {\n  const initialState = {\n    value: controlValue,\n    comparator\n  };\n  const [{ value, internalChanges }, dispatch] = useReducer<\n    Reducer<ReducerState<T>, ReducerAction<T>>,\n    ReducerState<T>\n  >(reducer, initialState, () => initialState);\n\n  const setValue = useCallback(\n    (newValue) =>\n      dispatch({\n        type: INTERNAL_STATE_CHANGE,\n        payload: newValue\n      }),\n    []\n  );\n\n  const controlledSetValue = useCallback(\n    (newValue) =>\n      dispatch({\n        type: CONTROLLED_STATE_CHANGE,\n        payload: newValue\n      }),\n    []\n  );\n\n  useEffect(() => {\n    if (onChange && isDefined(internalChanges)) {\n      onChange(internalChanges);\n    }\n  }, [internalChanges, onChange]);\n\n  useEffect(() => {\n    controlledSetValue(controlValue);\n  }, [controlledSetValue, controlValue]);\n\n  return [value, setValue, controlledSetValue];\n}\n","import { FC, CSSProperties, ChangeEvent } from 'react';\n\nimport { useControllableState } from 'use-controllable-state';\n\nconst divStyle: CSSProperties = {\n  margin: 8\n};\n\ninterface ComponentType {\n  id: string;\n  value?: string;\n  onChange: (newValue?: string) => void;\n}\n\nconst ControlledComponent: FC<ComponentType> = ({ id, value, onChange }) => {\n  const [, setInternalValue] = useControllableState<string | undefined>(\n    value,\n    onChange\n  );\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setInternalValue(event.target.value);\n  };\n\n  return (\n    <div style={{ padding: 8, marginBottom: 32, backgroundColor: '#EEEEEE' }}>\n      <div style={divStyle}>\n        <label htmlFor={id}>{id}</label>\n      </div>\n      <div style={divStyle}>\n        <select\n          id={id}\n          value={value}\n          onChange={handleChange}\n          style={{ width: 500 }}\n        >\n          <option />\n          <option value=\"optA\">Angel</option>\n          <option value=\"optB\">Beetle</option>\n          <option value=\"optC\">Cardinal</option>\n          <option value=\"optD\">Destiny</option>\n          <option value=\"optE\">Egg</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ControlledComponent;\n","import { useState } from 'react';\n\nimport ControlledComponent from './ControlledComponent';\n\nconst App = () => {\n  const [value, setValue] = useState<string>();\n  return (\n    <div>\n      <ControlledComponent id=\"First\" value={value} onChange={setValue} />\n      <ControlledComponent id=\"Second\" value={value} onChange={setValue} />\n      <ControlledComponent id=\"Third\" value={value} onChange={setValue} />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}